#  Найдите сумму цифр трехзначного числа.

# *Пример:*

# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0) |

n = list(input("ВВедите трехзначное число: "))
n=list(n)
print(type(n)) # В Python нет встроенного типа «массив», но вместо него можно использовать встроенный тип «список» (list).
print(n)
print(type(n))
s=sum(n) # Сумма элементов в списке с помощью функции sum()Также Python предоставляет нам встроенную функцию sum() для вычисления суммы элементов в любом объекте коллекции. Функция sum() принимает повторяющийся объект, такой как список, кортеж или набор, и возвращает сумму элементов в объекте.
print(s)

    #   /\
    #   ||
    #   || 

# ПОЧЕМУ ЭТО НЕ РАБОТАЕТ, ЕСЛИ ВВЕДЕННОЕ С КЛАВИАТУРЫ ЧИСЛО ПРЕОБОРАЗОВАНО В МАССИВ, А ФУНКЦИЯ SUM() ДОЛЖНА СЧИТАТЬ СУММУ ЭЛЕМЕНТОВ МАССИВА?    

# n = int(input("ВВедите число n: "))
# sum = 0
# while n > 0:
#     digit = n % 10
#     sum = sum + digit
#     n = n // 10
# print("Сумма:", sum)

# ЭТО ЧТО ЕДИНСТВЕННЫЙ СПОСОБ РЕШИТЬ ЭТУ ЗАДАЧУ? ОБРАТИТЬСЯ НА ПРЯМУЮ К ЭЛЕМЕНТУ СПИСКА НЕЛЬЗЯ? и ПРОСПИСАТЬ n[0]+n[1]+n[2]???

